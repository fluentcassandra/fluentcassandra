using FluentCassandra.Thrift.Protocol;
/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Text;

namespace FluentCassandra.Apache.Cassandra
{

  /// <summary>
  /// Not all the replicas required could be created and/or read.
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class UnavailableException : Exception, TBase
  {

    public UnavailableException() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("UnavailableException");
      oprot.WriteStructBegin(struc);
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("UnavailableException(");
      sb.Append(")");
      return sb.ToString();
    }

  }

}
